This is the first lesson of SSM, we are going to take a look at introduction, rules, agreements, FAQs

= General information =

We will be talking about practical system management! The introductions will not be that deep, but the labs are supposed to be done fully.

There is 150-180 hours to spend, 2 parts Linux and Windows labs! Mainly focused on practical part, and doing. There is no exam! But a lot of work!

2/3 - Ongoing assessments - Windows - Linux
1/3 - Use case driven paper, including presentation (in small words, a research of a method that makes my job easier as a service architecture)

Who we are? Proffessionals!

Most of the lectures will be in the morning, and the labs can be done in whatever order!

The goal:
* Gain experience as a system administrator on Windows and Linux
* To train a problem-solving attribute
* Use case driven
* To become less like a "student" and more like a junior employee

THere should not be such a thing like "It does not work". You need to try and troubleshoot it.

* Make sure that you do backups & snapshots
* Read questions carefully
* Try get it off and on
* Document everything in the lab documentation
* No room for emotions
* Try to think what you are doing, and then you should be able to find the problem
* The failure is the bases of experience
* If you do not try - it will not work. The more you try - the more experience you gather!

* Labs are you syllabus
* Go step by step
* Answer the questions
* Make sure to take screenshots and make them readable

* The labs usually have 2/3 weeks deadlines
* Upload the Pester tests screenshots
* Make sure that the file-hash is clearly visible
* Do not change the script!
* Make sure that naming is correct

66% - Labs!
33% - Use case driven paper, that covers both problems for Linux and Windows. First deadline is for 28th March (Windows), and May 16th (Linux), and presentation for May 23rd

= Use Case Driven Paper =

Lifelong learning & technical writing

Why did you wake up today? You need to always have a "Why", and then you will have what to work for, what to strive for!

The same is here - Why - What - How - we are coming with a proposal, that is solving a problem, and why, is more important. What and How, are questions for another moment!
Remember the ADProject, where you were solving the issue that you thought that exists!

Create a team of 5 members, and create a study covering a problem.

Look at it like a small problem:
* explain the importance of study (why)
* research how to solve the problem (how)
* implement (what)

Deadlines:
* 29th february - get a group and think of a UCDP problem to put in
