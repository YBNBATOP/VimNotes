= What does it actually mean when we say data is "persistent" ? =

That means that the data will remain at the same place even after a reboot, and that the actual files will nto be lost or modified.

= Why does a  userland process needs to use a file system to store/read data on a storage medium (and not just direct IO access) ? =

Because you cannot directly access the kernel functionalities to eventually write the information directly on yourself. Hence, the file system were invented to actually access those functions and serve your majesty.

= When taking about non-ssd discs, what is the advantage of sequential i/o ? =

The files are going to be read more quickly?

= Is this advantage the same for ssd discs ? =

I do not know. SSD are just faster because they eventually do not have anything mechanical moving around and have a bunch of controllers that are responsible to put the data in certain chuncks of the memory.

= Compare the two "versions" of partitioning (number of partitions, bios support, max disc size) =

MBR:
* old as fuck
* 32 bit
* maximum of 26 partitions or 27, of which 3 are actual ones, and the 1 is an extendable one meaning you can have 3+1.
* max size of 2TB

GPT:
* newer
* 128 bit
* many more partitions
* max size of 9.7 zettabytes

= Why not throw everything into one single monster partition ? =

Because then the management will be too hard because there might be multiple users on the system and it can be hard to get a hold of everyone's files.

= What does /dev/sda3 mean ? =

It means the 3rd partitions of the sda disk. Like I have my nvme and then I can have nvme0np1/2 and etc.

= Why can/should you give a hex code of a partition tyoe to a parititon when you create one ? =

Here I have no clue but maybe for eventual situations when the disk starts dying and then it can find instances of the information?

= What form does "a swap" have in Linux ? =

It can be either a file or it can be a partiotion I do not fucking understand.

= Which are the most used file system flavors in current linux ? =

Ext 4, ZFS, BTRFS, SYSFS? There is a bunch of them I do not need to know all of them

= What does it mean when something is mounted on a certain directory location ? =

I do not fucking know maybe it means that the other would need to gather access to that location so then they have the mount in their case too?

= What is a pseudo file system ? =

Well I suppose that in our case it is more like fucking lists (linked lists) and fucking kernel functions so genuiely it is more like a visual that we have files rather than a real table and shit.

= The tty command tells you which terminals you are currently using. Let's say one user gets as a reply /dev/tty1. and another user gets as a reply /dev/pts/0. what is the difference between those two users ? =

This is absolutely stupid.

In summary, the user associated with /dev/tty1 is likely using the first virtual console, while the user associated with /dev/pts/0 is likely using a terminal emulator or a remote login session. 

= What is an nfs type partition ? =

NEED FOR SPEED FFS 

It means that you can access files by doing a network mount and then you can eventually get access to the files from your NAS or etc.

= What does /etc/fstab do ? =

It saves the information about the system partitions and mounts and etc so that they survive and consist throughout the reboots.

= Some directories are present in almost every linux distro. Name them and describe their role briefly. =

/lib - libraries to run stuff! /var - holds the logs! /usr - some user information! /etc - configurations of the sytem! and many more

= What is a FCB ? =

In the context of computer file systems, particularly in older operating systems like MS-DOS, the File Control Block (FCB) is a data structure used to represent information about a file. It contains details such as the file name, file type, file organization, and other attributes. FCBs were used in early file systems to manage files before more advanced structures like the File Allocation Table (FAT) became prevalent.

Overall just a controller or space that gives information about what the fuck is going on.

= How so is a directory also a file ? =

Because it is a fucking inode/address inside a linked list of a father directory!

= What is an INODE ? =

In simple words - just an kind of address that is held inside the list.

= Whast is the difference between a hard and a soft link ? =

Softlink - you can make them from one partition to another.

Hardlinks - work only in one partition and you cannot empty the space unless you get rid of all the hardlinks.

= What is a superblock ? =

Like imagine having an MBR partition which you deleted once. That partition holds information about the whole file systme and how it is supposed to look like and function!

= Does archive always compress ? =

Nope, it does not, because then you just put files together and not always compress them.

= What is the difference between lossless and lossy compression ? give an example of both. =

Lossless will not loose any bit of infomration. Lossy - will allow that but it will be faster!

Zip, Tar and shit. For the other one - JPEG, MP3.

= Briefly describe a few archiving/compression tools commonly found in Linux. =

Tar, gzip, bzip, zip, 7z. Just googe them ffs.

= What can you find in the /etc/passwd & /etc/shadow files ? =

Information about the users on the system (simple users as well as the system users) and in the other one you can find the passwords of the users.

= What is so special about system accounts in Linux ? =

They do not have passowrds and they make the component part of the system deamons and programs.

= What are groups in Linux ? =

It is like a bunch of users in a certain certified level of privileges that can have different funcitons on the system, and have users assigned to them.

= How many groups can a user be a member of/use at once ? =

Use? one.

Be a member of? A shitton, and he can switch between them.

= What is the correct way of becoming root ? =

`su --login` that way there will be a traceback of who entered the root. `su -` I suppose should also be an option.

= Describe the sudo concept =

What am I, having a PhD here? It allows a user (who is set up corretly) to execute commands as super user, but not being the root. The sudo command will ask you for the password of your command.

= Who's on your system right now ? =

Thankfully - only me. I found that our by doing the command `who` and then I could even check when I logged in by doing `w` and then found information about myself.


