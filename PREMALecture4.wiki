We are going to be taught how to read assembly code! (fuck)

= Outline =

* Advanced Static Analysis
* C / C++
* Assembly
* CPU Architecture

= CPU =

The CPU is based upon a lot of components. Mostly conductors

There are sockets (more CPUs)

There are cores (multicores)

THere are threads (hyperthreading)

For software, the above does not matter, as we always look at one thread.

= Memory =

THere are multiple layers.

The fastest one, is registry, as it is closest to the CPU. The RAM (DDR) goes through all cache levels first.

= Terminology =

* Hardware (digital logic)
* Microcode (firmware)
* Machine code (it uses numbers for information)
* Low-level languages (like assembly, which is similar to machine code)
* High-level languages (allready compiled languages)
* Interpreted languages (not compiled languages)

A high-level programming language is  transformed into the CPU machine code through compiler. The machine code can then be transformed into low-level language, using the disassembler

= Assembly code =

There are multiple architectures, as they are different for every platform.

You can see where the code is starting, when you have the view at PEview, and check the optional NT headers and look for "Base of Code"
